[
   {
      "Path": "github.com/metakeule/dep",
      "Exports": {
         "ALL": "ALL bool",
         "DEP": "DEP path.Join",
         "DependancyInfosCorrupt": "DependancyInfosCorrupt",
         "DependancyNotInGOPATH": "DependancyNotInGOPATH",
         "DependancyNotInPackageDir": "DependancyNotInPackageDir",
         "DirNotAPackage": "DirNotAPackage",
         "ErrorCode": "type ErrorCode int",
         "ErrorCode.String": "(ErrorCode) String()(string)",
         "ErrorCodeInfos": "ErrorCodeInfos map[ErrorCode]string",
         "GOPATH": "GOPATH os.Getenv",
         "GOPATHInvalid": "GOPATHInvalid",
         "GOPATHNotSet": "GOPATHNotSet",
         "GOROOT": "GOROOT os.Getenv",
         "GOROOTNotSet": "GOROOTNotSet ErrorCode",
         "HOME": "HOME os.Getenv",
         "HOMENotSet": "HOMENotSet",
         "InvalidOptions": "InvalidOptions",
         "MapEqual": "MapEqual(map[string]string,map[string]string)(bool)",
         "PACKAGE": "PACKAGE *github.com/metakeule/exports#Package",
         "PACKAGE_DIR": "PACKAGE_DIR string",
         "PACKAGE_PATH": "PACKAGE_PATH string",
         "PackageInternal": "PackageInternal",
         "PackageInvalid": "PackageInvalid",
         "PackageNotInGOPATH": "PackageNotInGOPATH",
         "RECURSIVE": "RECURSIVE bool"
      },
      "Imports": {
         "github.com/metakeule/cli#BoolFlag": "type BoolFlag struct {\n  Name string\n  Usage string\n}",
         "github.com/metakeule/cli#Command": "type Command struct {\n  Name string\n  ShortName string\n  Usage string\n  Description string\n  Action (*Context)()\n  Flags []Flag\n}",
         "github.com/metakeule/cli#Context": "type Context struct {\n  App *App\n}",
         "github.com/metakeule/cli#Flag": "type Flag interface {\n  fmt.Stringer\n  Apply(*flag.FlagSet)()\n}",
         "github.com/metakeule/cli#NewApp": "NewApp()(*App)",
         "github.com/metakeule/cli#StringFlag": "type StringFlag struct {\n  Name string\n  Value string\n  Usage string\n}",
         "github.com/metakeule/dep/db#Exp": "type Exp struct {\n  Package string\n  Name string\n  Value string\n}",
         "github.com/metakeule/dep/db#Imp": "type Imp struct {\n  Package string\n  Import string\n  Name string\n  Value string\n}",
         "github.com/metakeule/dep/db#InsertExports": "InsertExports(...*Exp)(error)",
         "github.com/metakeule/dep/db#InsertImports": "InsertImports(...*Imp)(error)",
         "github.com/metakeule/dep/db#InsertPackages": "InsertPackages(...*Pkg)(error)",
         "github.com/metakeule/dep/db#Pkg": "type Pkg struct {\n  Package string\n  JsonMd5 string\n  Json []byte\n  ImportsMd5 string\n  ExportsMd5 string\n  MainMd5 string\n  InitMd5 string\n}",
         "github.com/metakeule/exports#Get": "Get(string)(*Package)",
         "github.com/metakeule/exports#LoadJson": "LoadJson([]byte)(*PackageJSON,error)",
         "github.com/metakeule/exports#Package": "type Package struct {\n  Path string\n  Internal bool\n  Imports map[string]bool\n  Exports map[string]Declaration\n  ExternalExports map[string]Declaration\n}",
         "github.com/metakeule/exports#PackageJSON": "type PackageJSON struct {\n  Path string\n  Exports map[string]string\n  Imports map[string]string\n}",
         "github.com/metakeule/exports#PkgPath": "PkgPath(string)(string)"
      }
   }
]
